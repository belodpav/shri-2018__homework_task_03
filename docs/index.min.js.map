{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/animatedText/animatedTextData.js","webpack:///./src/animatedText/animatedText.js","webpack:///./src/termInterface.js","webpack:///./src/audioStream.js","webpack:///./src/decorators/decorators.js","webpack:///./src/image/image.js","webpack:///./src/image/ImageData.js","webpack:///./src/videoStream.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","a","updateText","textBox","innerHTML","Math","floor","random","_animatedTextData2","length","setTimeout","document","querySelector","writable","key","TermInterface","selector","diagramSettings","this","rootNode","_rootNode","_volume","_diagram","_generateDiagItems","itemsCount","_appendDiagItems","items","push","_elClass","_diagramItems","_this","forEach","item","appendChild","className","el","createElement","val","style","height","array","AudioStream","afCount","_volumeVal","_AFArray","_AFCount","initAudioStream","values","fWidth","result","j","stream","context","window","AudioContext","webkitAudioContext","analyser","createAnalyser","gainNode","createGain","scriptNode","createScriptProcessor","smoothingTimeConstant","fftSize","onaudioprocess","Uint8Array","frequencyBinCount","getByteFrequencyData","average","getAverageVolume","getAverageArray","gain","createMediaStreamSource","connect","destination","err","console","error","navigator","mediaDevices","getUserMedia","audio","then","_handleAudioSuccess","bind","catch","_handleAudioError","_canvas","innerText","redFilter","ctx","width","globalCompositeOperation","fillStyle","beginPath","rect","closePath","fill","swapLines","imgData","lf","ll","h","w","data","start","startTwo","buf","swapLinesRandom","_image","ImageData","_data","_x","_y","rVal","matrix","gamma","gammaCorrection","g","b","truncate","_truncate","gray","contrast","factor","k","imageData","amplitude","_decorators","VideoStream","appSelector","audioStream","termInterface","_audio","_termInterface","_initNodeConnection","_initVideoStream","_video","clientW","documentElement","clientWidth","videoWidth","videoHeight","volumeVal","afArray","updateVolumeVal","updateAFDiagram","getContext","audioData","volume","getVolumeVal","getAFArray","clearRect","drawImage","newImgData","_ImageData2","getImageData","putImageData","noise","shake","classList","remove","add","noiseLight","getX","getY","_updateInterface","requestAnimationFrame","_canvasUpdate","srcObject","addEventListener","_getSizeObj2","_getSizeObj","_setSize","_setAppSize","_setCanvasSize","video","_handleVideoSucces","_handleVideoError","u","appInterface","_termInterface2","_audioStream2","_videoStream2","_animatedText2"],"mappings":"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","file":"index.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","const data = [\n    'factorial proc',\n    'mov   eax, [esp + 4]',\n    'test  eax, eax',\n    'jz    END',\n    'mul   dword ptr [esp + 4]',\n    'm3: fild dword ptr [esi]',\n    'invoke Beep, 3951, 200',\n    '0bbh,0cch,0ceh,0b9h,0c8h',\n    'mov ax, word ptr X',\n    'mov bx, word ptr X+2',\n    'sub ax, word ptr Y',\n    'sbb bx,word ptr Y+2',\n    'mov word ptr Z,ax',\n    'mov word ptr Z+2,bx'\n];\n\nexport default data;\n","import data from './animatedTextData';\n\nconst textBox = document.querySelector('.app__i-text');\n\nexport default function updateText() {\n    textBox.innerHTML = '';\n\n    for (let i = 0; i < 5; i++) {\n        const n = Math.floor(Math.random() * data.length);\n        textBox.innerHTML += data[n] + '<br/>';\n    }\n    setTimeout(updateText, 400);\n}\n","/**\n * @class\n * Класс интерфейса терминатора\n */\nclass TermInterface {\n    /**\n     * @constructor\n     * @param {String} selector - селектор блока интерфейса\n     * @param {Object} diagramSettings - обект с настройками диаграммы\n     */\n    constructor(selector, diagramSettings) {\n        const rootNode = document.querySelector(selector);\n\n        this._rootNode = rootNode;\n        this._volume = rootNode.querySelector('.app__i-volume');\n        this._diagram = rootNode.querySelector('.app__i-diagram');\n        this._generateDiagItems(diagramSettings.itemsCount);\n        this._appendDiagItems();\n    }\n\n    /**\n     * @method\n     * Создает n node елементов столбиков для\n     * гистограммы звука\n     * @param {Number} n\n     */\n    _generateDiagItems(n) {\n        const items = [];\n\n        for (let i = 0; i < n; i++) {\n            items.push(this._elClass('app__i-diagram-item'));\n        }\n\n        this._diagramItems = items;\n    }\n\n    /**\n     * @method\n     * Добавляет элементы диаграммы\n     * в DOM\n     */\n    _appendDiagItems() {\n        this._diagramItems.forEach((item) => {\n            this._diagram.appendChild(item);\n        });\n    }\n\n    /**\n     * Возвращает node элемент\n     * с заданным классом\n     * @param {String} className\n     * @returns {Node}\n     */\n    _elClass(className) {\n        const el = document.createElement('div');\n        el.className = className;\n        return el;\n    }\n\n    /**\n     * @method\n     * Обновляет состояние уровеня звука\n     * @param {Number} val\n     */\n    updateVolumeVal(val) {\n        const volume = this._volume;\n\n        volume.style.height = val + 'px';\n    }\n\n    /**\n     * @method\n     * Обновляет состояние гистограммы звука\n     * @param {[Number]} array\n     */\n    updateAFDiagram(array) {\n        const items = this._diagramItems;\n\n        for (let i = 0; i < items.length; i++) {\n            items[i].style.height = array[i] + 'px';\n        }\n    }\n}\n\nexport default TermInterface;\n","/**\n * @class\n * Класс AudioStream\n * Позволяет работать с потоком аудиоданных\n * микрофона. Есть методы для получения значения\n * громкости звука, почлучения усредненного массива АЧХ\n */\nclass AudioStream {\n    /**\n     * @constructor\n     * @param {Number} afCount - число частотных полос гистограммы\n     */\n    constructor(afCount) {\n        this._volumeVal = 0;\n        this._AFArray = [];\n        this._AFCount = afCount;\n        this.initAudioStream();\n    }\n    /**\n     * Возвращает величину громкости\n     * @return {Number}\n     */\n    getVolumeVal() {\n        return this._volumeVal;\n    }\n\n    /**\n     * @method\n     * Возвращает массив с усредненными данными\n     * амплитуды сигнала от частоты\n     * @return {[Number]}\n     */\n    getAFArray() {\n        return this._AFArray;\n    }\n\n    /**\n     * @method\n     * Возвращает среднее арифметическое элементов\n     * входного массива\n     * @param {*} array\n     * @return {Number}\n     */\n    getAverageVolume(array) {\n        let values = 0;\n        const length = array.length;\n\n        for (let i = 0; i < length; i++) {\n            values += array[i];\n        }\n\n        return values / length;\n    }\n\n    /**\n     * @method\n     * Возвращает массив средний арифметеческих значений\n     * амплитуд для равных участков частот\n     * @param {[Number]} array\n     * @param {Number} n\n     * @return {[Number]}\n     */\n    getAverageArray(array, n) {\n        const length = array.length;\n        const fWidth = Math.floor(length / n);\n        const result = [];\n        let values;\n\n        for (let i = 0; i < n; i++) {\n            values = 0;\n            for (let j = i * fWidth; j < (i + 1) * fWidth; j++) {\n                values += array[j];\n            }\n            result.push(values / fWidth);\n        }\n        return result;\n    }\n\n    /**\n     * Обработчик успешного подключения\n     * к потоку микрофона\n     * @param {*} stream\n     */\n    _handleAudioSuccess(stream) {\n        const context = new (window.AudioContext || window.webkitAudioContext)();\n        const analyser = context.createAnalyser();\n        const gainNode = context.createGain();\n        const scriptNode = context.createScriptProcessor(2048, 1, 1);\n\n        analyser.smoothingTimeConstant = 0.8;\n        analyser.fftSize = 1024;\n\n        scriptNode.onaudioprocess = () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n            analyser.getByteFrequencyData(array);\n            const average = this.getAverageVolume(array);\n            this._volumeVal = average;\n            this._AFArray = this.getAverageArray(array, this._AFCount);\n        };\n\n        gainNode.gain.value = 1;\n        const source = context.createMediaStreamSource(stream);\n        source.connect(gainNode);\n        gainNode.connect(analyser);\n        analyser.connect(scriptNode);\n        scriptNode.connect(context.destination);\n    }\n\n    /**\n     * Обработчик ошибок при подключении\n     * к потоку мирофона\n     * @param {*} err\n     */\n    _handleAudioError(err) {\n        console.error('Error!', err);\n    }\n\n    /**\n     * @method\n     * Метод инициализации класса\n     * Осуществляется подключение к потоку микрофона\n     */\n    initAudioStream() {\n        const audioSettings = {\n            audio: true\n        };\n\n        if (navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia(audioSettings)\n                .then(this._handleAudioSuccess.bind(this))\n                .catch(this._handleAudioError.bind(this));\n        } else {\n            this._canvas.innerText = 'getUserMedia is not supported';\n        }\n    }\n}\n\nexport default AudioStream;\n","/**\n * Декоратор для Context элемента Canvas\n * Добавляем режим наложения с красным цветом\n * @param {*} ctx\n * @param {*} width\n * @param {*} height\n */\nfunction redFilter(ctx, width, height) {\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = 'rgb(255,0,0)';\n    ctx.beginPath();\n    ctx.rect(0, 0, width, height);\n    ctx.closePath();\n    ctx.fill();\n}\n\nexport {redFilter};\n","const PX = 4;\n/**\n * Меняет две линии объекта ImageData Контекста\n * элемента canvas местами\n * @param {Object} imgData\n * @param {Number} lf\n * @param {Number} ll\n * @return {Object}\n */\nfunction swapLines(imgData, lf, ll) {\n    const h = imgData.height * PX;\n    const w = imgData.width * PX;\n    const data = imgData.data;\n    const start = h * lf * PX;\n    const startTwo = h * ll * PX;\n    let buf = 0;\n\n    for (let i = 0; i < w; i++) {\n        buf = data[start + i];\n        data[start + i] = data[startTwo + i];\n        data[startTwo + i] = buf;\n    }\n\n    return imgData;\n}\n\n/**\n * Меняет две рандомные части двух линий объекта ImageData\n * Контекста элемента canvas местами\n * @param {Object} imgData\n * @param {Number} lf\n * @param {Number} ll\n * @return {Object}\n */\nfunction swapLinesRandom(imgData, lf, ll) {\n    const h = imgData.height * PX;\n    const w = imgData.width * PX;\n    const data = imgData.data;\n    const start = h * lf * PX;\n    const startTwo = h * ll * PX;\n    let buf = 0;\n    const randomS = Math.floor(Math.random() * w);\n\n    for (let i = randomS; i < w; i++) {\n        buf = data[start + i];\n        data[start + i] = data[startTwo + i];\n        data[startTwo + i] = buf;\n    }\n\n    return imgData;\n}\n\nexport {swapLines, swapLinesRandom};\n","import {swapLinesRandom} from './image';\n/**\n * @class\n * Класс обертки над объектом ImageData\n * контекста элемента canvas\n */\nclass ImageData {\n    /**\n     * @constructor\n     * @param {Object} data\n     */\n    constructor(data) {\n        this._data = data;\n        this._x = 0;\n        this._y = 0;\n    }\n\n    get() {\n        return this._data;\n    }\n\n    red(rVal) {\n        const matrix = this._data.data;\n\n        for (let i = 0; i < matrix.length; i += 4) {\n            matrix[i] = rVal;\n        }\n        return this;\n    }\n\n    gamma(gamma) {\n        const matrix = this._data.data;\n        const gammaCorrection = 1 / gamma;\n\n        for (let i = 0; i < matrix.length; i += 4) {\n            const r = matrix[i];\n            const g = matrix[i + 1];\n            const b = matrix[i + 2];\n\n            matrix[i] = 255 * (r / 255) ^ gammaCorrection;\n            matrix[i + 1] = 255 * (b / 255) ^ gammaCorrection;\n            matrix[i + 2] = 255 * (g / 255) ^ gammaCorrection;\n        }\n        return this;\n    }\n\n    brightness(val) {\n        const matrix = this._data.data;\n        const truncate = this._truncate;\n\n        for (let i = 0; i < matrix.length; i += 4) {\n            const r = matrix[i];\n            const g = matrix[i + 1];\n            const b = matrix[i + 2];\n\n            matrix[i] = truncate(r + val);\n            matrix[i + 1] = truncate(g + val);\n            matrix[i + 2] = truncate(b + val);\n        }\n\n        return this;\n    }\n\n    grayAverage() {\n        const matrix = this._data.data;\n        let gray = 0;\n\n        for (let i = 0; i < matrix.length; i += 4) {\n            const r = matrix[i];\n            const g = matrix[i + 1];\n            const b = matrix[i + 2];\n\n            gray = Math.floor((r + g + b) / 3);\n\n            matrix[i] = gray;\n            matrix[i + 1] = gray;\n            matrix[i + 2] = gray;\n        }\n        return this;\n    }\n\n    setContrast(contrast) {\n        const factor = (259 * (contrast + 255)) / (255 * (259 - contrast));\n        const matrix = this._data.data;\n\n        const truncate = this._truncate;\n\n        for (let i = 0; i < matrix.length; i += 4) {\n            matrix[i] = truncate(factor * (matrix[i] - 128) + 128);\n            matrix[i + 1] = truncate(factor * (matrix[i + 1] - 128) + 128);\n            matrix[i + 2] = truncate(factor * (matrix[i + 2] - 128) + 128);\n        }\n\n        return this;\n    }\n\n    noiseLight(k) {\n        let imageData = this._data;\n\n        for (\n            let i = 0;\n            i < imageData.height - 4;\n            i += Math.floor(Math.random() * ((4 + imageData.height) - 4) * k)) {\n            imageData = swapLinesRandom(imageData, i, i + 3);\n            imageData = swapLinesRandom(imageData, i + 1, i + 2);\n        }\n        return this;\n    }\n\n    noise() {\n        let imageData = this._data;\n\n        for (let i = 0; i < imageData.height - 4; i += 5) {\n            imageData = swapLinesRandom(imageData, i, i + 3);\n            imageData = swapLinesRandom(imageData, i + 1, i + 2);\n        }\n        return this;\n    }\n\n    shake(amplitude) {\n        this._x = Math.floor(Math.random() * 2 * amplitude - amplitude);\n        this._y = Math.floor(Math.random() * 2 * amplitude - amplitude);\n\n        return this;\n    }\n\n    getX() {\n        return this._x;\n    }\n\n    getY() {\n        return this._y;\n    }\n\n    // Private methods\n    _truncate(val) {\n        if (val > 255) {\n            return 255;\n        }\n        if (val < 0) {\n            return 0;\n        }\n\n        return val;\n    }\n}\n\nexport default ImageData;\n","import ImageData from './image/ImageData';\nimport {redFilter} from './decorators/decorators';\n\n/**\n * @class\n * Ядро приложения, связывающее видеопоток,\n * аудио поток микрофона, и интерфес терминатора\n */\nclass VideoStream {\n    /**\n     * @constructor\n     * @param {String} appSelector\n     * @param {AudioStream} audioStream\n     * @param {TermInterface} termInterface\n     */\n    constructor(appSelector, audioStream, termInterface) {\n        this._audio = audioStream;\n        this._termInterface = termInterface;\n\n        this._initNodeConnection(appSelector);\n        this._initVideoStream();\n    }\n\n    /**\n     * @method\n     * Находит компоненты приложения в DOM\n     * и подключает их к модели\n     * @param {String} selector\n     */\n    _initNodeConnection(selector) {\n        const rootNode = document.querySelector(selector);\n        this._canvas = rootNode.querySelector('.app__canvas');\n        this._video = rootNode.querySelector('.app__video');\n        this._rootNode = rootNode;\n    }\n\n    _setSize(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    _setAppSize(width, height) {\n        this._rootNode.style.width = width + 'px';\n        this._rootNode.style.height = height + 'px';\n    }\n\n    _setCanvasSize(width, height) {\n        this._canvas.width = width;\n        this._canvas.height = height;\n    }\n\n    /**\n     * @method\n     * Возвращает объект с оптимальными размерами\n     * рабочей области приложения\n     * @returns {Object}\n     */\n    _getSizeObj() {\n        const {_video} = this;\n        const clientW = document.documentElement.clientWidth;\n        const width = clientW > _video.videoWidth ? _video.videoWidth : clientW;\n        const height = Math.floor((_video.videoHeight / _video.videoWidth) * width);\n\n        return {\n            width,\n            height\n        };\n    }\n\n    /**\n     * @method\n     * Обновляет состояние интерфеса\n     * в соотвествии с передаваемыми\n     * данными\n     * @param {Number} volumeVal\n     * @param {[Number]} afArray\n     */\n    _updateInterface(volumeVal, afArray) {\n        this._termInterface.updateVolumeVal(volumeVal);\n        this._termInterface.updateAFDiagram(afArray);\n    }\n\n    /**\n     * @method\n     * Обновляет состояние canvas\n     */\n    _canvasUpdate() {\n        const {_canvas, _video, width, height, _audio} = this;\n        const ctx = _canvas.getContext('2d');\n        const HIHG_VOLUME = 70;\n        const audioData = {\n            volume: _audio.getVolumeVal(),\n            afArray: _audio.getAFArray()\n        };\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.drawImage(_video, 0, 0, width, height);\n\n        let newImgData = new ImageData(ctx.getImageData(0, 0, width, height));\n\n        ctx.putImageData(newImgData.get(), 0, 0);\n\n        newImgData = new ImageData(ctx.getImageData(0, 0, width, height));\n\n        if (audioData.volume > HIHG_VOLUME) {\n            newImgData.noise().shake(audioData.volume / 10);\n            _canvas.classList.remove('app__canvas_contrast_200');\n            _canvas.classList.add('app__canvas_contrast_400');\n        } else {\n            newImgData.noiseLight(0.4);\n            _canvas.classList.remove('app__canvas_contrast_400');\n            _canvas.classList.add('app__canvas_contrast_200');\n        }\n\n        ctx.putImageData(newImgData.get(), newImgData.getX(), newImgData.getY());\n\n        this._updateInterface(audioData.volume, audioData.afArray);\n\n        redFilter(ctx, width, height);\n\n        requestAnimationFrame(this._canvasUpdate.bind(this));\n    }\n\n    _handleVideoError(err) {\n        console.error('Error!', err);\n    }\n\n    _handleVideoSucces(stream) {\n        this._video.srcObject = stream;\n        this._video.addEventListener('loadedmetadata', () => {\n            const {width, height} = this._getSizeObj();\n\n            this._setSize(width, height);\n            this._setAppSize(width, height);\n            this._setCanvasSize(width, height);\n\n            requestAnimationFrame(this._canvasUpdate.bind(this));\n        });\n    }\n\n    /**\n     * @method\n     * Метод инициализации класса\n     * Осуществляется подключение к видеопотоку\n     * вебкамеры/камеры\n     */\n    _initVideoStream() {\n        const videoSettings = {\n            audio: false,\n            video: true\n        };\n\n        if (navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia(videoSettings)\n                .then(this._handleVideoSucces.bind(this))\n                .catch(this._handleVideoError.bind(this));\n        } else {\n            this._canvas.innerText = 'getUserMedia is not supported';\n        }\n    }\n}\n\nexport default VideoStream;\n","import VideoStream from './videoStream';\nimport AudioStream from './audioStream';\nimport TermInterface from './termInterface';\nimport updateText from './animatedText/animatedText';\nimport css from './index.css';\n\n//  Число частотных полос гистограммы\nconst AF_COUNT = 16;\n\nconst appInterface = new TermInterface('.app__i', {itemsCount: AF_COUNT});\nconst audio = new AudioStream(AF_COUNT);\n\nconst video = new VideoStream('.app', audio, appInterface);\n\n// Анимируем текст в итерфейсе\nupdateText();\n"],"sourceRoot":""}